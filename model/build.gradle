/*
 *  BEGIN_COPYRIGHT
 *
 *  Copyright (C) 2011-2013 deCODE genetics Inc.
 *  Copyright (C) 2013-2019 WuXi NextCode Inc.
 *  All Rights Reserved.
 *
 *  GORpipe is free software: you can redistribute it and/or modify
 *  it under the terms of the AFFERO GNU General Public License as published by
 *  the Free Software Foundation.
 *
 *  GORpipe is distributed "AS-IS" AND WITHOUT ANY WARRANTY OF ANY KIND,
 *  INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
 *  NON-INFRINGEMENT, OR FITNESS FOR A PARTICULAR PURPOSE. See
 *  the AFFERO GNU General Public License for the complete license terms.
 *
 *  You should have received a copy of the AFFERO GNU General Public License
 *  along with GORpipe.  If not, see <http://www.gnu.org/licenses/agpl-3.0.html>
 *
 *  END_COPYRIGHT
 */

project(':model') {
    apply plugin: 'scala'
    // See: https://github.com/gradle/gradle/issues/6854
    configurations.all {
        if (name.startsWith("incrementalScalaAnalysis")) {
            extendsFrom = []
        }
    }

    // To build mixed java scala projects, the scala plugin can handle both java and scala code so
    // we add the java source dir to scala plugin and remove all src dirs from the java plugin.
    sourceSets.main.scala.srcDir "src/main/java"
    sourceSets.main.java.srcDirs = []

    dependencies {

        compile project(':util:collection')
        compile project(':util:string')
        compile project(':util:gorutil')
        compile project(':clientbase')
        compile project(':base:exception')
        compile project(':base:config')
        compile project(':external')

        compile "com.github.samtools:htsjdk:2.19.+"
        compile "com.zaxxer:HikariCP:3.4.+"
        compile "commons-configuration:commons-configuration:1.10"
        compile "org.scala-lang.modules:scala-xml_2.12:1.0.+"
        compile "org.scala-lang.modules:scala-parser-combinators_2.12:1.0.+"

        // TODO: 1.4.4.4-5 seems to be broken - fix zstd-jni at an earlier version for now
        compile "com.github.luben:zstd-jni:1.4.4-3"

        compile "org.reflections:reflections:0.9.+"

        compile "commons-codec:commons-codec:1.13"
        compile "commons-io:commons-io:2.6"
        compile "org.aeonbits.owner:owner:1.0.+"

        compile 'org.apache.parquet:parquet-common:1.11.0'
        compile 'org.apache.parquet:parquet-format:2.8.0'
        compile 'org.apache.parquet:parquet-column:1.11.0'
        compile 'org.apache.parquet:parquet-hadoop:1.11.0'

        compile 'org.apache.hadoop:hadoop-common:3.2.1'
        compile 'org.apache.hadoop:hadoop-mapreduce-client-core:3.2.1'

        compile 'com.google.inject:guice:4.2.+'

        runtime "org.xerial:sqlite-jdbc:3.28.+"
        // Exclude slf4j bindings we dont want.
        runtime("org.postgresql:postgresql:42.2.7") { exclude group: 'org.slf4j', module: 'slf4j-simple' }

        testCompile project(':base:test')

        testCompile "org.mockito:mockito-core:3.0.+"
        testCompile "org.scalatest:scalatest_2.12:3.0.8"
        testCompile "org.scalacheck:scalacheck_2.12:1.13.+"

        testCompile project(":gortools") // Needed so we can call gorpipe in the tests.
        testCompile project(':gortools').sourceSets.test.output

        testRuntime "org.apache.derby:derby:10.14.+"
    }
}
